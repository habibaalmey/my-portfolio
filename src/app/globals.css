
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Dark Blue & Yellow Theme */
    --background: 220 60% 12%; /* Very Dark Blue */
    --foreground: 50 100% 90%; /* Light Yellowish White */

    --card: 220 50% 18%;     /* Darker Blue for cards */
    --card-foreground: 50 90% 88%; /* Lighter Yellowish text */

    --popover: 220 45% 16%;    /* Dark Blue for popovers */
    --popover-foreground: 50 100% 90%;

    --primary: 50 100% 60%; /* Vibrant Yellow */
    --primary-foreground: 220 60% 10%; /* Very Dark Blue text on primary */

    --secondary: 210 50% 35%; /* Medium Blue */
    --secondary-foreground: 50 100% 90%;

    --muted: 220 30% 25%;      /* Muted Dark Blue for dividers/less emphasis */
    --muted-foreground: 220 15% 65%; /* Lighter Grayish Blue for muted text */

    --accent: 45 100% 55%;    /* Slightly different Yellow/Orange for accents */
    --accent-foreground: 220 60% 10%;

    --destructive: 0 70% 55%;
    --destructive-foreground: 0 0% 98%;

    --border: 220 40% 30%;     /* Medium Dark Blue border */
    --input: 220 40% 22%;      /* Dark Blue input background */
    --ring: 50 100% 60%;      /* Yellow for focus rings */

    --radius: 0.5rem;

    --sidebar-background: 220 60% 8%;
    --sidebar-foreground: 50 100% 90%;
    --sidebar-primary: 50 100% 55%;
    --sidebar-primary-foreground: 220 60% 10%;
    --sidebar-accent: 45 100% 50%;
    --sidebar-accent-foreground: 220 60% 10%;
    --sidebar-border: 220 40% 20%;
    --sidebar-ring: 50 100% 55%;

    --chart-1: 50 100% 55%;
    --chart-2: 45 90% 60%;
    --chart-3: 210 40% 65%;
    --chart-4: 220 30% 40%;
    --chart-5: 50 80% 75%;

    /* Treasure box button colors */
    --treasure-bg: 40 50% 30%; /* Brownish */
    --treasure-border: 30 60% 20%; /* Darker Brownish */
    --treasure-foreground: 50 100% 85%; /* Light Yellow/Gold */
    --treasure-highlight: 50 100% 60%; /* Primary yellow for accents */
  }

  .dark {
    /* Keeping dark theme consistent with :root for now, can be differentiated if needed */
    --background: 220 60% 12%;
    --foreground: 50 100% 90%;
    --card: 220 50% 18%;
    --card-foreground: 50 90% 88%;
    --popover: 220 45% 16%;
    --popover-foreground: 50 100% 90%;
    --primary: 50 100% 60%;
    --primary-foreground: 220 60% 10%;
    --secondary: 210 50% 35%;
    --secondary-foreground: 50 100% 90%;
    --muted: 220 30% 25%;
    --muted-foreground: 220 15% 65%;
    --accent: 45 100% 55%;
    --accent-foreground: 220 60% 10%;
    --destructive: 0 70% 55%;
    --destructive-foreground: 0 0% 98%;
    --border: 220 40% 30%;
    --input: 220 40% 22%;
    --ring: 50 100% 60%;

    --treasure-bg: 40 50% 30%;
    --treasure-border: 30 60% 20%;
    --treasure-foreground: 50 100% 85%;
    --treasure-highlight: 50 100% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    color: hsl(var(--foreground)); /* Explicitly set color for cursor */
  }
  body {
    background: linear-gradient(-45deg, hsl(var(--primary)), hsl(var(--accent)), hsl(var(--secondary)), hsl(var(--background)), hsl(var(--background)));
    background-size: 400% 400%;
    animation: animate-gradient-x 25s ease infinite;
    scroll-behavior: smooth;
  }
  section {
    @apply scroll-mt-20; /* Offset for fixed header */
  }
}

@layer components {
  .btn-treasure-box {
    @apply bg-[hsl(var(--treasure-bg))] text-[hsl(var(--treasure-foreground))] border border-[hsl(var(--treasure-border))];
    box-shadow: inset 0 -2px 0px 0px hsl(var(--treasure-border)),
                inset 0 1px 1px 0px hsl(var(--treasure-highlight)/0.5),
                0px 2px 2px 0px hsla(0,0%,0%,0.3);
  }
  .btn-treasure-box:hover {
    @apply bg-[hsl(var(--treasure-bg)/0.9)] brightness-110 scale-[1.03];
    box-shadow: inset 0 -2px 0px 0px hsl(var(--treasure-border)/0.8),
                inset 0 1px 2px 0px hsl(var(--treasure-highlight)/0.7),
                0px 3px 4px 0px hsla(0,0%,0%,0.3);
  }
  .btn-treasure-box:active {
    @apply brightness-95;
    box-shadow: inset 0 -1px 0px 0px hsl(var(--treasure-border)/0.7),
                inset 0 1px 1px 0px hsl(var(--treasure-highlight)/0.6),
                0px 1px 1px 0px hsla(0,0%,0%,0.2);
    transform: translateY(1px);
  }

  .digital-glow-frame {
    @apply relative p-1 bg-transparent rounded-lg shadow-md;
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
  }
  .digital-glow-frame::before,
  .digital-glow-frame::after {
    content: '';
    @apply absolute inset-0 rounded-lg pointer-events-none;
    z-index: -1; /* Behind the image */
  }
  .digital-glow-frame::before { /* Outer glow */
    box-shadow: 0 0 15px 3px hsl(var(--primary)/0.5), 0 0 25px 8px hsl(var(--primary)/0.3);
    animation: pulse-glow 3s infinite alternate;
  }
  .digital-glow-frame::after { /* Inner subtle frame */
    @apply border-2 border-primary/30;
    margin: -2px; /* Slightly offset for layering */
  }
  .digital-glow-frame .image-screen-glow {
    @apply bg-background p-1 rounded-sm border border-primary/20;
  }

  @keyframes pulse-glow {
    from { opacity: 0.7; transform: scale(0.98); }
    to { opacity: 1; transform: scale(1.02); }
  }

  .laptop-frame-profile-image {
    @apply relative bg-[hsl(var(--card))] p-2 md:p-3 rounded-md shadow-xl mx-auto;
    width: fit-content;
    border-bottom: 12px solid hsl(var(--muted)); /* Laptop base */
    border-left: 4px solid hsl(var(--muted));
    border-right: 4px solid hsl(var(--muted));
    border-top: 4px solid hsl(var(--muted));
  }

  .laptop-frame-profile-image::before { /* Screen Bezel */
    content: '';
    @apply absolute inset-2 md:inset-3 border-2 border-[hsl(var(--border)/0.5)] rounded-sm;
  }

  .laptop-frame-profile-image::after { /* Webcam dot */
    content: '';
    @apply absolute top-1 left-1/2 w-1.5 h-1.5 bg-[hsl(var(--border)/0.7)] rounded-full -translate-x-1/2;
  }

  .laptop-frame-profile-image .image-itself {
    @apply relative z-[1] block rounded-sm overflow-hidden;
    /* Adjust width/height based on image placeholder, e.g. 300x300 -> screen needs to be slightly larger for bezel */
    width: 300px; /* Match image width */
    height: 300px; /* Match image height */
    margin: 2px; /* Simulate screen padding inside bezel */
  }


  .card-achievement {
    background-color: hsl(var(--muted) / 0.5); /* Stone-like color */
    color: hsl(var(--foreground));
    border: 3px solid hsl(var(--border) / 0.6);
    box-shadow:
      inset 2px 2px 0px hsl(var(--card) / 0.5), /* Inner highlight */
      inset -2px -2px 0px hsl(var(--background) / 0.5), /* Inner shadow */
      4px 4px 0px hsl(var(--background)/0.8); /* Outer block shadow */
    padding: 1rem;
    overflow: hidden;
    transform: perspective(800px) rotateY(3deg); /* Slight 3D perspective */
    transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
    display: flex;
    flex-direction: column;
    text-align: center;
    height: 100%;
  }
  .card-achievement:hover {
    transform: perspective(800px) rotateY(0deg) scale(1.03);
    box-shadow:
      inset 2px 2px 0px hsl(var(--card) / 0.7),
      inset -2px -2px 0px hsl(var(--background) / 0.3),
      6px 6px 5px hsl(var(--background)/0.7);
  }

  .achievement-icon-container {
    position: relative;
    margin-top: 0;
    margin-bottom: 0.75rem; /* 12px */
    margin-left: auto;
    margin-right: auto;
    width: 4rem; /* 64px */
    height: 4rem; /* 64px */
    padding: 0.75rem; /* 12px */
    border-radius: 0.375rem; /* 6px */
    background-color: hsl(var(--primary)/0.1);
    border: 2px solid hsl(var(--primary)/0.4);
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    background-image:
        linear-gradient(45deg, hsl(var(--card)) 25%, transparent 25%),
        linear-gradient(-45deg, hsl(var(--card)) 25%, transparent 25%),
        linear-gradient(45deg, transparent 75%, hsl(var(--card)) 75%),
        linear-gradient(-45deg, transparent 75%, hsl(var(--card)) 75%);
    background-size: 10px 10px; /* Size of the pixel checks */
    background-position: 0 0, 0 5px, 5px -5px, -5px 0px; /* Offset for checkering */
  }
  .achievement-icon-container svg {
    width: 2.5rem; /* 40px */
    height: 2.5rem; /* 40px */
    color: hsl(var(--primary));
    transition: filter 0.3s ease-out;
  }
  .card-achievement:hover .achievement-icon-container {
    border-color: hsl(var(--primary)/0.6);
  }
  .card-achievement:hover .achievement-icon-container svg {
     filter: drop-shadow(0 0 8px hsl(var(--primary)/0.7));
  }


  .bg-starfield {
    background-image:
      radial-gradient(1px 1px at 20px 30px, hsl(var(--foreground) / 0.3), transparent),
      radial-gradient(1px 1px at 40px 70px, hsl(var(--foreground) / 0.2), transparent),
      radial-gradient(1.5px 1.5px at 50px 160px, hsl(var(--foreground) / 0.4), transparent),
      radial-gradient(1px 1px at 90px 40px, hsl(var(--foreground) / 0.3), transparent),
      radial-gradient(1.5px 1.5px at 130px 80px, hsl(var(--foreground) / 0.2), transparent),
      radial-gradient(1px 1px at 160px 120px, hsl(var(--foreground) / 0.4), transparent),
      radial-gradient(1px 1px at 180px 50px, hsl(var(--foreground) / 0.3), transparent);
    background-size: 200px 200px;
    background-position: 0 0;
  }

  .bg-brick-pattern {
    background-color: hsl(var(--card)); /* Brick color */
    background-image:
      linear-gradient(hsl(var(--border) / 0.2) 1px, transparent 1px), /* Horizontal mortar lines */
      linear-gradient(90deg, hsl(var(--border) / 0.2) 1px, transparent 1px); /* Vertical mortar lines */
    background-size: 80px 40px; /* Brick size: width 80px, height 40px */
    border-top: 1px solid hsl(var(--border)/0.3); /* Optional top border */
    border-bottom: 1px solid hsl(var(--border)/0.3); /* Optional bottom border */
  }

  .text-neon-primary {
    color: hsl(var(--primary)); /* Ensures base color is from theme */
    /* Adjusted for Bungee font to be less blocky */
    text-shadow:
      0 0 2px hsl(var(--primary)/0.9), /* Inner sharp edge */
      0 0 6px hsl(var(--primary)/0.7),   /* Main bright glow */
      0 0 10px hsl(var(--primary)/0.4); /* Softer outer halo */
  }

  .project-card-minecraft {
    background-color: hsl(20, 30%, 35%); /* Dirt Brownish color for Minecraft feel */
    color: hsl(var(--card-foreground));
    border-top: 4px solid hsl(20, 30%, 55%); /* Lighter top for 3D effect */
    border-left: 4px solid hsl(20, 30%, 45%); /* Slightly darker left */
    border-right: 4px solid hsl(20, 30%, 25%); /* Darker right */
    border-bottom: 4px solid hsl(20, 30%, 20%); /* Darkest bottom */
    box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
    padding: 1rem; /* Ensure padding is consistent */
    background-image: none !important; /* Remove any gradients */
    transform: perspective(1000px) rotateX(5deg) rotateY(-5deg); /* Add a slight 3D tilt */
    transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
    display: flex; /* Added for flex properties */
    flex-direction: column; /* Added for flex properties */
    height: 100%; /* Added for flex properties */
  }
  .project-card-minecraft:hover {
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg) scale(1.02); /* Straighten and slightly enlarge on hover */
    box-shadow: 4px 4px 10px rgba(0,0,0,0.3);
  }


  .separator-creative-dashed {
    height: 2px;
    border: none;
    background: transparent;
    border-top: 2px dashed hsl(var(--primary) / 0.7);
  }
}

@layer utilities {
  @keyframes expand-width {
    from { width: 0%; opacity: 0; }
    to { width: 100%; opacity: 1; }
  }
  .animate-expand-width {
    animation: expand-width 0.8s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
  }

  @keyframes animate-gradient-x {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  @keyframes binary-flow {
    0% { background-position: 0 0; }
    100% { background-position: 0px 200px; } /* Matches SVG height */
  }

  /* Marquee animation for skills ribbon */
  @keyframes marquee {
    0% { transform: translateX(0%); }
    100% { transform: translateX(-100%); }
  }
  @keyframes marquee2 {
    0% { transform: translateX(100%); }
    100% { transform: translateX(0%); }
  }

  .animate-marquee {
    animation: marquee 60s linear infinite;
  }
  .animate-marquee2 {
    animation: marquee2 60s linear infinite;
  }

  .group-hover\:pause-animation:hover .animate-marquee,
  .group-hover\:pause-animation:hover .animate-marquee2 {
    animation-play-state: paused;
  }

  /* Typewriter animation */
  @keyframes typing {
    from { width: 0 }
    to { width: 100% }
  }
  .typewriter-text {
    overflow: hidden;
    white-space: nowrap;
    margin: 0 auto;
    animation: typing 3.5s steps(30, end); /* Removed blink-caret */
  }

  /* Creative Timeline */
  .timeline-digital-path {
    @apply absolute left-0 top-0 bottom-0 w-1 bg-primary/30 rounded-full;
    transform: translateX(calc(1rem - 2px)); /* Centering based on 1rem node offset */
  }
  .timeline-digital-path::before {
    content: '';
    @apply absolute inset-x-0 top-0 h-full w-full opacity-50;
    background-image: linear-gradient(
      transparent 0%,
      hsl(var(--primary) / 0.05) 10%,
      hsl(var(--primary) / 0.15) 20%,
      hsl(var(--primary) / 0.05) 30%,
      transparent 40%,
      transparent 60%,
      hsl(var(--primary) / 0.05) 70%,
      hsl(var(--primary) / 0.15) 80%,
      hsl(var(--primary) / 0.05) 90%,
      transparent 100%
    );
    background-size: 100% 100px; /* Adjust size of waves */
    animation: binary-flow 5s linear infinite; /* Re-use existing binary-flow or create a new one */
  }


  .timeline-node {
    @apply absolute top-[0.3rem] h-5 w-5 rounded-full border-2 bg-background ring-4 ring-background transition-all duration-300;
    border-color: hsl(var(--primary));
    box-shadow: 0 0 8px hsl(var(--primary)/0.7);
    left: calc(-1rem + 2px); /* Adjusted for 1rem node offset and path width */
    animation: timeline-node-pulse 2s infinite ease-in-out;
  }

  .timeline-node:hover {
    transform: scale(1.2);
    box-shadow: 0 0 15px hsl(var(--primary));
  }

  @keyframes timeline-node-pulse {
    0% { box-shadow: 0 0 8px hsl(var(--primary)/0.7); opacity: 0.8; }
    50% { box-shadow: 0 0 12px hsl(var(--primary)); opacity: 1; }
    100% { box-shadow: 0 0 8px hsl(var(--primary)/0.7); opacity: 0.8; }
  }

}

    